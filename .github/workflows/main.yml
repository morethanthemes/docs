# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # Build and push on a branch
      # see https://gist.github.com/umanghome/30527c68cd605dfef8702a832ff14fd5
      
      # Install dependencie and build
      - name: Install all dependencies
        run: | 
          npm install
          npm run build
      
      # Push
      # see 
      # see https://github.com/s0/git-publish-subdir-action
      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: deployment # The branch name where you want to push the assets
          FOLDER: build # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message        
          
  # deploy:
  #   name: "Deploy to staging"
  #   needs: build
  #   runs-on: self-hosted
    
  #   steps:
  #     - name: Pull on remote 
  #       run: 'cd /var/www/vhosts/radon.morethanthemes.com/mtt-docs/ && eval "$(ssh-agent -k)" && eval "$(ssh-agent -s)" && ssh-add /home/ubuntu/.ssh/id_rsa_git && git pull >> github.log && tail ./github.log'      
        
